name: Test Build TizenTube WGT

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Tizen Studio
      uses: actions/cache@v4
      with:
        path: web-cli_Tizen_Studio_5.1_ubuntu-64.bin
        key: tizen-studio-5.1-${{ hashFiles('docker/build-docker.sh') }}

    - name: Download Tizen Studio (if not cached)
      run: |
        if [ ! -f "web-cli_Tizen_Studio_5.1_ubuntu-64.bin" ]; then
          echo "📥 Downloading Tizen Studio..."
          sudo apt-get update && sudo apt-get install -y aria2
          aria2c -j 16 -s 16 -x 16 \
            -o "web-cli_Tizen_Studio_5.1_ubuntu-64.bin" \
            --header='Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8' \
            --header='Accept-Language: en-US,en;q=0.6' \
            --header='Referer: https://developer.tizen.org/' \
            -U 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36' \
            https://download.tizen.org/sdk/Installer/tizen-studio_5.1/web-cli_Tizen_Studio_5.1_ubuntu-64.bin
          chmod +x "web-cli_Tizen_Studio_5.1_ubuntu-64.bin"
        else
          echo "✅ Using cached Tizen Studio"
        fi

    - name: Test Local Build (Node.js)
      run: |
        echo "🧪 Testing local build process..."
        cd mods
        # Install pnpm
        corepack enable pnpm
        pnpm install
        pnpm run build
        echo "✅ Mods build successful"
        
        cd ../standalone
        pnpm install  
        pnpm run build
        echo "✅ Standalone build successful"
        
        # Verify build outputs
        ls -la dist/
        echo "📦 Build output verified"

    - name: Test Docker Build
      run: |
        echo "🔨 Testing Docker build..."
        docker buildx build --platform linux/amd64 --load -t tizentube-builder .
        echo "✅ Docker image built successfully"

    - name: Test WGT Creation
      run: |
        echo "🚀 Testing WGT creation..."
        mkdir -p output certificates
        chmod 777 output certificates
        
        docker run --platform linux/amd64 --rm \
          -v "$(pwd)/output:/output" \
          -v "$(pwd)/certificates:/tizen/tizen-studio-data/keystore/author" \
          tizentube-builder

    - name: Verify WGT
      run: |
        if [ -f "output/TizenTube.wgt" ]; then
          echo "✅ WGT created successfully"
          echo "📊 WGT size: $(stat -c%s output/TizenTube.wgt | numfmt --to=iec)"
          
          # Test WGT structure
          echo "🔍 Verifying WGT contents..."
          unzip -l output/TizenTube.wgt
          
          # Check for required files
          unzip -t output/TizenTube.wgt
          echo "✅ WGT structure is valid"
        else
          echo "❌ WGT creation failed"
          ls -la output/
          exit 1
        fi

    - name: Upload test build
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: tizentube-test-build-${{ github.run_number }}
        path: output/TizenTube.wgt
        retention-days: 7